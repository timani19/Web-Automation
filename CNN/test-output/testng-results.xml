<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="14" total="134" passed="120" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\imani\IdeaProjects\CNN-Module\CNN\test-output\html]]>
    </line>
  </reporter-output>
  <suite started-at="2019-10-12T05:58:20 EDT" name="CNN Automation Script " finished-at="2019-10-12T06:24:58 EDT" duration-ms="1597323">
    <groups>
    </groups>
    <test started-at="2019-10-12T05:58:20 EDT" name="CNN HomePage Test" finished-at="2019-10-12T06:24:58 EDT" duration-ms="1597323">
      <class name="home.TestTypeText">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:04 EDT" name="setUp" finished-at="2019-10-12T06:14:19 EDT" duration-ms="14657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:19 EDT" name="startExtent" finished-at="2019-10-12T06:14:19 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeBusiness()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeBusiness()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:19 EDT" name="typeBusiness" finished-at="2019-10-12T06:14:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeBusiness -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:14:19 EDT" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeBusiness status=SUCCESS method=TestTypeText.typeBusiness()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:19 EDT" name="cleanUp" finished-at="2019-10-12T06:14:20 EDT" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:20 EDT" name="setUp" finished-at="2019-10-12T06:14:29 EDT" duration-ms="9201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:29 EDT" name="startExtent" finished-at="2019-10-12T06:14:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeCollege()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeCollege()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:29 EDT" name="typeCollege" finished-at="2019-10-12T06:14:29 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeCollege -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:29 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:14:29 EDT" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeCollege status=SUCCESS method=TestTypeText.typeCollege()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:29 EDT" name="cleanUp" finished-at="2019-10-12T06:14:30 EDT" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:30 EDT" name="setUp" finished-at="2019-10-12T06:14:42 EDT" duration-ms="11927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:42 EDT" name="startExtent" finished-at="2019-10-12T06:14:42 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeConstitution()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeConstitution()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:42 EDT" name="typeConstitution" finished-at="2019-10-12T06:14:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeConstitution -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:42 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:14:42 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeConstitution status=SUCCESS method=TestTypeText.typeConstitution()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:42 EDT" name="cleanUp" finished-at="2019-10-12T06:14:42 EDT" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:42 EDT" name="setUp" finished-at="2019-10-12T06:14:52 EDT" duration-ms="9213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:52 EDT" name="startExtent" finished-at="2019-10-12T06:14:52 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeDemocrats()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:52 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:14:52 EDT" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeDemocrats status=SUCCESS method=TestTypeText.typeDemocrats()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeDemocrats()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:52 EDT" name="typeDemocrats" finished-at="2019-10-12T06:14:52 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeDemocrats -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:52 EDT" name="cleanUp" finished-at="2019-10-12T06:14:52 EDT" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:14:52 EDT" name="setUp" finished-at="2019-10-12T06:15:09 EDT" duration-ms="16502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:09 EDT" name="startExtent" finished-at="2019-10-12T06:15:09 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeEconomy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeEconomy()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:09 EDT" name="typeEconomy" finished-at="2019-10-12T06:15:09 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeEconomy -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:09 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:15:09 EDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeEconomy status=SUCCESS method=TestTypeText.typeEconomy()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:09 EDT" name="cleanUp" finished-at="2019-10-12T06:15:10 EDT" duration-ms="796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:10 EDT" name="setUp" finished-at="2019-10-12T06:15:23 EDT" duration-ms="12904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:23 EDT" name="startExtent" finished-at="2019-10-12T06:15:23 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeFBI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeFBI()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:23 EDT" name="typeFBI" finished-at="2019-10-12T06:15:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeFBI -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:23 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:15:23 EDT" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeFBI status=SUCCESS method=TestTypeText.typeFBI()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:23 EDT" name="cleanUp" finished-at="2019-10-12T06:15:23 EDT" duration-ms="604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:23 EDT" name="setUp" finished-at="2019-10-12T06:15:33 EDT" duration-ms="9705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:33 EDT" name="startExtent" finished-at="2019-10-12T06:15:33 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeGadget()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:33 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:15:33 EDT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeGadget status=SUCCESS method=TestTypeText.typeGadget()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeGadget()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:33 EDT" name="typeGadget" finished-at="2019-10-12T06:15:33 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeGadget -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:33 EDT" name="cleanUp" finished-at="2019-10-12T06:15:34 EDT" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:34 EDT" name="setUp" finished-at="2019-10-12T06:15:47 EDT" duration-ms="12764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:47 EDT" name="startExtent" finished-at="2019-10-12T06:15:47 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeGmMode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:47 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:15:47 EDT" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeGmMode status=SUCCESS method=TestTypeText.typeGmMode()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeGmMode()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:47 EDT" name="typeGmMode" finished-at="2019-10-12T06:15:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeGmMode -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:47 EDT" name="cleanUp" finished-at="2019-10-12T06:15:47 EDT" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:15:47 EDT" name="setUp" finished-at="2019-10-12T06:16:00 EDT" duration-ms="12375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:00 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:16:00 EDT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeImpeachment status=SUCCESS method=TestTypeText.typeImpeachment()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeImpeachment()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:00 EDT" name="typeImpeachment" finished-at="2019-10-12T06:16:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeImpeachment -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:00 EDT" name="startExtent" finished-at="2019-10-12T06:16:00 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeImpeachment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:00 EDT" name="cleanUp" finished-at="2019-10-12T06:16:00 EDT" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:00 EDT" name="setUp" finished-at="2019-10-12T06:16:10 EDT" duration-ms="9922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:10 EDT" name="startExtent" finished-at="2019-10-12T06:16:10 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeIphone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:10 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:16:10 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeIphone status=SUCCESS method=TestTypeText.typeIphone()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeIphone()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:10 EDT" name="typeIphone" finished-at="2019-10-12T06:16:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeIphone -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:10 EDT" name="cleanUp" finished-at="2019-10-12T06:16:11 EDT" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:11 EDT" name="setUp" finished-at="2019-10-12T06:16:23 EDT" duration-ms="12433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:23 EDT" name="startExtent" finished-at="2019-10-12T06:16:23 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeIphonePro()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeIphonePro()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:23 EDT" name="typeIphonePro" finished-at="2019-10-12T06:16:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeIphonePro -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:23 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:16:23 EDT" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeIphonePro status=SUCCESS method=TestTypeText.typeIphonePro()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:23 EDT" name="cleanUp" finished-at="2019-10-12T06:16:24 EDT" duration-ms="662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:24 EDT" name="setUp" finished-at="2019-10-12T06:16:37 EDT" duration-ms="13444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:37 EDT" name="startExtent" finished-at="2019-10-12T06:16:38 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeJoeBiden()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeJoeBiden()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:38 EDT" name="typeJoeBiden" finished-at="2019-10-12T06:16:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeJoeBiden -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:38 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:16:38 EDT" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeJoeBiden status=SUCCESS method=TestTypeText.typeJoeBiden()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:38 EDT" name="cleanUp" finished-at="2019-10-12T06:16:38 EDT" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:38 EDT" name="setUp" finished-at="2019-10-12T06:16:47 EDT" duration-ms="9128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="typeJustinBieber()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:47 EDT" name="typeJustinBieber" finished-at="2019-10-12T06:16:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeJustinBieber -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:47 EDT" name="startExtent" finished-at="2019-10-12T06:16:47 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeJustinBieber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:47 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:16:47 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeJustinBieber status=SUCCESS method=TestTypeText.typeJustinBieber()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:47 EDT" name="cleanUp" finished-at="2019-10-12T06:16:48 EDT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:16:48 EDT" name="setUp" finished-at="2019-10-12T06:17:00 EDT" duration-ms="12167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:00 EDT" name="startExtent" finished-at="2019-10-12T06:17:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeMichellePhan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:00 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:17:00 EDT" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeMichellePhan status=SUCCESS method=TestTypeText.typeMichellePhan()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeMichellePhan()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:00 EDT" name="typeMichellePhan" finished-at="2019-10-12T06:17:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeMichellePhan -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:00 EDT" name="cleanUp" finished-at="2019-10-12T06:17:01 EDT" duration-ms="574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:01 EDT" name="setUp" finished-at="2019-10-12T06:17:14 EDT" duration-ms="13412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:14 EDT" name="startExtent" finished-at="2019-10-12T06:17:14 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeMta()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:14 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:17:14 EDT" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeMta status=SUCCESS method=TestTypeText.typeMta()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeMta()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:14 EDT" name="typeMta" finished-at="2019-10-12T06:17:14 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeMta -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:14 EDT" name="cleanUp" finished-at="2019-10-12T06:17:15 EDT" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:15 EDT" name="setUp" finished-at="2019-10-12T06:17:28 EDT" duration-ms="13162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:28 EDT" name="startExtent" finished-at="2019-10-12T06:17:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeNYPD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeNYPD()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:28 EDT" name="typeNYPD" finished-at="2019-10-12T06:17:28 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeNYPD -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:28 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:17:28 EDT" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeNYPD status=SUCCESS method=TestTypeText.typeNYPD()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:28 EDT" name="cleanUp" finished-at="2019-10-12T06:17:28 EDT" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:28 EDT" name="setUp" finished-at="2019-10-12T06:17:41 EDT" duration-ms="12517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:41 EDT" name="startExtent" finished-at="2019-10-12T06:17:41 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeNYSubway()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:41 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:17:41 EDT" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeNYSubway status=SUCCESS method=TestTypeText.typeNYSubway()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeNYSubway()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:41 EDT" name="typeNYSubway" finished-at="2019-10-12T06:17:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeNYSubway -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:41 EDT" name="cleanUp" finished-at="2019-10-12T06:17:42 EDT" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:42 EDT" name="setUp" finished-at="2019-10-12T06:17:53 EDT" duration-ms="11283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:53 EDT" name="startExtent" finished-at="2019-10-12T06:17:53 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeNancyPelosi()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:53 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:17:53 EDT" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeNancyPelosi status=SUCCESS method=TestTypeText.typeNancyPelosi()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeNancyPelosi()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:53 EDT" name="typeNancyPelosi" finished-at="2019-10-12T06:17:53 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeNancyPelosi -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:53 EDT" name="cleanUp" finished-at="2019-10-12T06:17:54 EDT" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:17:54 EDT" name="setUp" finished-at="2019-10-12T06:18:06 EDT" duration-ms="12193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:06 EDT" name="startExtent" finished-at="2019-10-12T06:18:06 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeNasa()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeNasa()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:06 EDT" name="typeNasa" finished-at="2019-10-12T06:18:06 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeNasa -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:06 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:18:06 EDT" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeNasa status=SUCCESS method=TestTypeText.typeNasa()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:06 EDT" name="cleanUp" finished-at="2019-10-12T06:18:07 EDT" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:07 EDT" name="setUp" finished-at="2019-10-12T06:18:19 EDT" duration-ms="12430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:19 EDT" name="startExtent" finished-at="2019-10-12T06:18:19 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeRecent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:18:19 EDT" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeRecent status=SUCCESS method=TestTypeText.typeRecent()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeRecent()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:19 EDT" name="typeRecent" finished-at="2019-10-12T06:18:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeRecent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:19 EDT" name="cleanUp" finished-at="2019-10-12T06:18:20 EDT" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:20 EDT" name="setUp" finished-at="2019-10-12T06:18:32 EDT" duration-ms="12445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:32 EDT" name="startExtent" finished-at="2019-10-12T06:18:32 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeRepublicans()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="typeRepublicans()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:32 EDT" name="typeRepublicans" finished-at="2019-10-12T06:18:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeRepublicans -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:32 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:18:32 EDT" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeRepublicans status=SUCCESS method=TestTypeText.typeRepublicans()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:32 EDT" name="cleanUp" finished-at="2019-10-12T06:18:33 EDT" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:33 EDT" name="setUp" finished-at="2019-10-12T06:18:47 EDT" duration-ms="14409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:47 EDT" name="startExtent" finished-at="2019-10-12T06:18:47 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeSamSung()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:47 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:18:47 EDT" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeSamSung status=SUCCESS method=TestTypeText.typeSamSung()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeSamSung()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:47 EDT" name="typeSamSung" finished-at="2019-10-12T06:18:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeSamSung -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:47 EDT" name="cleanUp" finished-at="2019-10-12T06:18:48 EDT" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:48 EDT" name="setUp" finished-at="2019-10-12T06:18:59 EDT" duration-ms="11301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="typeTechnology()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:59 EDT" name="typeTechnology" finished-at="2019-10-12T06:18:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeTechnology -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:59 EDT" name="startExtent" finished-at="2019-10-12T06:18:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeTechnology()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:59 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:18:59 EDT" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeTechnology status=SUCCESS method=TestTypeText.typeTechnology()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:18:59 EDT" name="cleanUp" finished-at="2019-10-12T06:19:00 EDT" duration-ms="691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:00 EDT" name="setUp" finished-at="2019-10-12T06:19:13 EDT" duration-ms="12898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="typeTrump()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:13 EDT" name="typeTrump" finished-at="2019-10-12T06:19:13 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeTrump -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:13 EDT" name="startExtent" finished-at="2019-10-12T06:19:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeTrump()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:13 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:19:13 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeTrump status=SUCCESS method=TestTypeText.typeTrump()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:13 EDT" name="cleanUp" finished-at="2019-10-12T06:19:14 EDT" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:14 EDT" name="setUp" finished-at="2019-10-12T06:19:28 EDT" duration-ms="14174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:28 EDT" name="startExtent" finished-at="2019-10-12T06:19:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeUnemployment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:28 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:19:28 EDT" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeUnemployment status=SUCCESS method=TestTypeText.typeUnemployment()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="typeUnemployment()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:28 EDT" name="typeUnemployment" finished-at="2019-10-12T06:19:28 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeUnemployment -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:28 EDT" name="cleanUp" finished-at="2019-10-12T06:19:29 EDT" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:29 EDT" name="setUp" finished-at="2019-10-12T06:19:41 EDT" duration-ms="12372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="typeVoting()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:41 EDT" name="typeVoting" finished-at="2019-10-12T06:19:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeVoting -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:41 EDT" name="startExtent" finished-at="2019-10-12T06:19:41 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestTypeText.typeVoting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:41 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:19:41 EDT" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeVoting status=SUCCESS method=TestTypeText.typeVoting()[pri:0, instance:home.TestTypeText@6f03482] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestTypeText@6f03482]" started-at="2019-10-12T06:19:41 EDT" name="cleanUp" finished-at="2019-10-12T06:19:41 EDT" duration-ms="557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestTypeText -->
      <class name="home.TestSearchText">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:42 EDT" name="setUp" finished-at="2019-10-12T06:19:55 EDT" duration-ms="13153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:55 EDT" name="startExtent" finished-at="2019-10-12T06:19:55 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.cnnCareers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="cnnCareers()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:55 EDT" name="cnnCareers" finished-at="2019-10-12T06:19:55 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cnnCareers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:55 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:19:55 EDT" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cnnCareers status=SUCCESS method=TestSearchText.cnnCareers()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:55 EDT" name="cleanUp" finished-at="2019-10-12T06:19:55 EDT" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:19:55 EDT" name="setUp" finished-at="2019-10-12T06:20:09 EDT" duration-ms="13892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:09 EDT" name="startExtent" finished-at="2019-10-12T06:20:09 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.followOnFacebook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:09 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:20:09 EDT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=followOnFacebook status=SUCCESS method=TestSearchText.followOnFacebook()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="followOnFacebook()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:09 EDT" name="followOnFacebook" finished-at="2019-10-12T06:20:09 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- followOnFacebook -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:09 EDT" name="cleanUp" finished-at="2019-10-12T06:20:10 EDT" duration-ms="568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:10 EDT" name="setUp" finished-at="2019-10-12T06:20:19 EDT" duration-ms="8594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:19 EDT" name="startExtent" finished-at="2019-10-12T06:20:19 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.followOnInstagram()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:20:19 EDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=followOnInstagram status=SUCCESS method=TestSearchText.followOnInstagram()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="followOnInstagram()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:19 EDT" name="followOnInstagram" finished-at="2019-10-12T06:20:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- followOnInstagram -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:19 EDT" name="cleanUp" finished-at="2019-10-12T06:20:19 EDT" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:19 EDT" name="setUp" finished-at="2019-10-12T06:20:33 EDT" duration-ms="13596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="followOnTwitter()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:33 EDT" name="followOnTwitter" finished-at="2019-10-12T06:20:33 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- followOnTwitter -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:33 EDT" name="startExtent" finished-at="2019-10-12T06:20:33 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.followOnTwitter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:33 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:20:33 EDT" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=followOnTwitter status=SUCCESS method=TestSearchText.followOnTwitter()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:33 EDT" name="cleanUp" finished-at="2019-10-12T06:20:33 EDT" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:33 EDT" name="setUp" finished-at="2019-10-12T06:20:42 EDT" duration-ms="8960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:42 EDT" name="startExtent" finished-at="2019-10-12T06:20:42 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.getChina()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getChina()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:42 EDT" name="getChina" finished-at="2019-10-12T06:20:42 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChina -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:42 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:20:42 EDT" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getChina status=SUCCESS method=TestSearchText.getChina()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:42 EDT" name="cleanUp" finished-at="2019-10-12T06:20:43 EDT" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:43 EDT" name="setUp" finished-at="2019-10-12T06:20:57 EDT" duration-ms="14261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:57 EDT" name="startExtent" finished-at="2019-10-12T06:20:57 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.getCongress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getCongress()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:57 EDT" name="getCongress" finished-at="2019-10-12T06:20:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCongress -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:57 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:20:57 EDT" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCongress status=SUCCESS method=TestSearchText.getCongress()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:57 EDT" name="cleanUp" finished-at="2019-10-12T06:20:58 EDT" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:20:58 EDT" name="setUp" finished-at="2019-10-12T06:21:10 EDT" duration-ms="11886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:10 EDT" name="startExtent" finished-at="2019-10-12T06:21:10 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchBangladesh()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:10 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:21:10 EDT" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBangladesh status=SUCCESS method=TestSearchText.searchBangladesh()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchBangladesh()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:10 EDT" name="searchBangladesh" finished-at="2019-10-12T06:21:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBangladesh -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:10 EDT" name="cleanUp" finished-at="2019-10-12T06:21:11 EDT" duration-ms="734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:11 EDT" name="setUp" finished-at="2019-10-12T06:21:21 EDT" duration-ms="10183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:21 EDT" name="startExtent" finished-at="2019-10-12T06:21:21 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchBasketball()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchBasketball()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:21 EDT" name="searchBasketball" finished-at="2019-10-12T06:21:21 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBasketball -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:21 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:21:21 EDT" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBasketball status=SUCCESS method=TestSearchText.searchBasketball()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:21 EDT" name="cleanUp" finished-at="2019-10-12T06:21:22 EDT" duration-ms="930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:22 EDT" name="setUp" finished-at="2019-10-12T06:21:34 EDT" duration-ms="12258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:34 EDT" name="startExtent" finished-at="2019-10-12T06:21:34 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchCNNProfile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:34 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:21:34 EDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCNNProfile status=SUCCESS method=TestSearchText.searchCNNProfile()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchCNNProfile()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:34 EDT" name="searchCNNProfile" finished-at="2019-10-12T06:21:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCNNProfile -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:34 EDT" name="cleanUp" finished-at="2019-10-12T06:21:35 EDT" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:35 EDT" name="setUp" finished-at="2019-10-12T06:21:47 EDT" duration-ms="12219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:47 EDT" name="startExtent" finished-at="2019-10-12T06:21:47 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchCollegeFootball()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchCollegeFootball()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:47 EDT" name="searchCollegeFootball" finished-at="2019-10-12T06:21:47 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCollegeFootball -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:47 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:21:47 EDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCollegeFootball status=SUCCESS method=TestSearchText.searchCollegeFootball()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:47 EDT" name="cleanUp" finished-at="2019-10-12T06:21:48 EDT" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:21:48 EDT" name="setUp" finished-at="2019-10-12T06:22:00 EDT" duration-ms="12668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:00 EDT" name="startExtent" finished-at="2019-10-12T06:22:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchEnergy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:00 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:22:00 EDT" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchEnergy status=SUCCESS method=TestSearchText.searchEnergy()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchEnergy()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:00 EDT" name="searchEnergy" finished-at="2019-10-12T06:22:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchEnergy -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:00 EDT" name="cleanUp" finished-at="2019-10-12T06:22:01 EDT" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:01 EDT" name="setUp" finished-at="2019-10-12T06:22:10 EDT" duration-ms="9336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:10 EDT" name="startExtent" finished-at="2019-10-12T06:22:10 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchFashion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:10 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:22:10 EDT" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFashion status=SUCCESS method=TestSearchText.searchFashion()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchFashion()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:10 EDT" name="searchFashion" finished-at="2019-10-12T06:22:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFashion -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:10 EDT" name="cleanUp" finished-at="2019-10-12T06:22:11 EDT" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:11 EDT" name="setUp" finished-at="2019-10-12T06:22:24 EDT" duration-ms="12619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchGadgets()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:24 EDT" name="searchGadgets" finished-at="2019-10-12T06:22:24 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchGadgets -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:24 EDT" name="startExtent" finished-at="2019-10-12T06:22:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchGadgets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:24 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:22:24 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchGadgets status=SUCCESS method=TestSearchText.searchGadgets()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:24 EDT" name="cleanUp" finished-at="2019-10-12T06:22:26 EDT" duration-ms="2624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:26 EDT" name="setUp" finished-at="2019-10-12T06:22:40 EDT" duration-ms="13267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchLifestyle()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:40 EDT" name="searchLifestyle" finished-at="2019-10-12T06:22:40 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchLifestyle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:40 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:22:40 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchLifestyle status=SUCCESS method=TestSearchText.searchLifestyle()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:40 EDT" name="startExtent" finished-at="2019-10-12T06:22:40 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchLifestyle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:40 EDT" name="cleanUp" finished-at="2019-10-12T06:22:40 EDT" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:40 EDT" name="setUp" finished-at="2019-10-12T06:22:53 EDT" duration-ms="12514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:53 EDT" name="startExtent" finished-at="2019-10-12T06:22:53 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchMedia()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:53 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:22:53 EDT" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchMedia status=SUCCESS method=TestSearchText.searchMedia()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchMedia()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:53 EDT" name="searchMedia" finished-at="2019-10-12T06:22:53 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMedia -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:53 EDT" name="cleanUp" finished-at="2019-10-12T06:22:53 EDT" duration-ms="638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:22:53 EDT" name="setUp" finished-at="2019-10-12T06:23:07 EDT" duration-ms="13363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:07 EDT" name="startExtent" finished-at="2019-10-12T06:23:07 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchNews()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchNews()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:07 EDT" name="searchNews" finished-at="2019-10-12T06:23:07 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNews -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:07 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:23:07 EDT" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchNews status=SUCCESS method=TestSearchText.searchNews()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:07 EDT" name="cleanUp" finished-at="2019-10-12T06:23:08 EDT" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:08 EDT" name="setUp" finished-at="2019-10-12T06:23:19 EDT" duration-ms="11901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:19 EDT" name="startExtent" finished-at="2019-10-12T06:23:19 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchOlympics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:23:20 EDT" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchOlympics status=SUCCESS method=TestSearchText.searchOlympics()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchOlympics()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:19 EDT" name="searchOlympics" finished-at="2019-10-12T06:23:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOlympics -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:20 EDT" name="cleanUp" finished-at="2019-10-12T06:23:20 EDT" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:20 EDT" name="setUp" finished-at="2019-10-12T06:23:30 EDT" duration-ms="10187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:30 EDT" name="startExtent" finished-at="2019-10-12T06:23:30 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchOpinion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:30 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:23:30 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchOpinion status=SUCCESS method=TestSearchText.searchOpinion()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchOpinion()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:30 EDT" name="searchOpinion" finished-at="2019-10-12T06:23:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOpinion -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:30 EDT" name="cleanUp" finished-at="2019-10-12T06:23:31 EDT" duration-ms="929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:31 EDT" name="setUp" finished-at="2019-10-12T06:23:41 EDT" duration-ms="9945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:41 EDT" name="startExtent" finished-at="2019-10-12T06:23:41 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchPhotos()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchPhotos()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:41 EDT" name="searchPhotos" finished-at="2019-10-12T06:23:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPhotos -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:41 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:23:41 EDT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPhotos status=SUCCESS method=TestSearchText.searchPhotos()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:41 EDT" name="cleanUp" finished-at="2019-10-12T06:23:42 EDT" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:42 EDT" name="setUp" finished-at="2019-10-12T06:23:55 EDT" duration-ms="13017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:55 EDT" name="startExtent" finished-at="2019-10-12T06:23:55 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchSocial()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:55 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:23:55 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSocial status=SUCCESS method=TestSearchText.searchSocial()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchSocial()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:55 EDT" name="searchSocial" finished-at="2019-10-12T06:23:55 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSocial -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:55 EDT" name="cleanUp" finished-at="2019-10-12T06:23:56 EDT" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:23:56 EDT" name="setUp" finished-at="2019-10-12T06:24:07 EDT" duration-ms="11731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:07 EDT" name="startExtent" finished-at="2019-10-12T06:24:07 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchTvSchedule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchTvSchedule()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:07 EDT" name="searchTvSchedule" finished-at="2019-10-12T06:24:07 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTvSchedule -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:07 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:24:07 EDT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTvSchedule status=SUCCESS method=TestSearchText.searchTvSchedule()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:07 EDT" name="cleanUp" finished-at="2019-10-12T06:24:08 EDT" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:08 EDT" name="setUp" finished-at="2019-10-12T06:24:22 EDT" duration-ms="13528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:22 EDT" name="startExtent" finished-at="2019-10-12T06:24:22 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchUS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchUS()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:22 EDT" name="searchUS" finished-at="2019-10-12T06:24:22 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUS -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:22 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:24:22 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchUS status=SUCCESS method=TestSearchText.searchUS()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:22 EDT" name="cleanUp" finished-at="2019-10-12T06:24:22 EDT" duration-ms="544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:22 EDT" name="setUp" finished-at="2019-10-12T06:24:32 EDT" duration-ms="9967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:32 EDT" name="startExtent" finished-at="2019-10-12T06:24:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchUSCrime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchUSCrime()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:32 EDT" name="searchUSCrime" finished-at="2019-10-12T06:24:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUSCrime -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:32 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:24:32 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchUSCrime status=SUCCESS method=TestSearchText.searchUSCrime()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:32 EDT" name="cleanUp" finished-at="2019-10-12T06:24:33 EDT" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:33 EDT" name="setUp" finished-at="2019-10-12T06:24:47 EDT" duration-ms="13723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchWeather()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:47 EDT" name="searchWeather" finished-at="2019-10-12T06:24:47 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWeather -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:47 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:24:47 EDT" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWeather status=SUCCESS method=TestSearchText.searchWeather()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:47 EDT" name="startExtent" finished-at="2019-10-12T06:24:47 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.searchWeather()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:47 EDT" name="cleanUp" finished-at="2019-10-12T06:24:47 EDT" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:47 EDT" name="setUp" finished-at="2019-10-12T06:24:57 EDT" duration-ms="9899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:57 EDT" name="startExtent" finished-at="2019-10-12T06:24:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchText.testSearchFood()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:57 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:24:57 EDT" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchFood status=SUCCESS method=TestSearchText.testSearchFood()[pri:0, instance:home.TestSearchText@9d5509a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testSearchFood()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:57 EDT" name="testSearchFood" finished-at="2019-10-12T06:24:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchFood -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchText@9d5509a]" started-at="2019-10-12T06:24:57 EDT" name="cleanUp" finished-at="2019-10-12T06:24:58 EDT" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestSearchText -->
      <class name="home.TestFooterTabs">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:42 EDT" name="setUp" finished-at="2019-10-12T06:08:54 EDT" duration-ms="12461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:54 EDT" name="startExtent" finished-at="2019-10-12T06:08:54 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.get2019Elections()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="get2019Elections()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:54 EDT" name="get2019Elections" finished-at="2019-10-12T06:08:54 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get2019Elections -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:54 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:08:54 EDT" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get2019Elections status=SUCCESS method=TestFooterTabs.get2019Elections()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:54 EDT" name="cleanUp" finished-at="2019-10-12T06:08:55 EDT" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:08:55 EDT" name="setUp" finished-at="2019-10-12T06:09:08 EDT" duration-ms="13059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:08 EDT" name="startExtent" finished-at="2019-10-12T06:09:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getAboutUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getAboutUs()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:08 EDT" name="getAboutUs" finished-at="2019-10-12T06:09:08 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAboutUs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:08 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:09:08 EDT" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAboutUs status=SUCCESS method=TestFooterTabs.getAboutUs()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:08 EDT" name="cleanUp" finished-at="2019-10-12T06:09:08 EDT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:08 EDT" name="setUp" finished-at="2019-10-12T06:09:23 EDT" duration-ms="14353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:23 EDT" name="startExtent" finished-at="2019-10-12T06:09:23 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getAccessibilityAndCc()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:23 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:09:23 EDT" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAccessibilityAndCc status=SUCCESS method=TestFooterTabs.getAccessibilityAndCc()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="getAccessibilityAndCc()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:23 EDT" name="getAccessibilityAndCc" finished-at="2019-10-12T06:09:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccessibilityAndCc -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:23 EDT" name="cleanUp" finished-at="2019-10-12T06:09:23 EDT" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:23 EDT" name="setUp" finished-at="2019-10-12T06:09:36 EDT" duration-ms="12676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getAdChoices()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:36 EDT" name="getAdChoices" finished-at="2019-10-12T06:09:36 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdChoices -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:36 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:09:36 EDT" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAdChoices status=SUCCESS method=TestFooterTabs.getAdChoices()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:36 EDT" name="startExtent" finished-at="2019-10-12T06:09:36 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getAdChoices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:36 EDT" name="cleanUp" finished-at="2019-10-12T06:09:37 EDT" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:37 EDT" name="setUp" finished-at="2019-10-12T06:09:50 EDT" duration-ms="12790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:50 EDT" name="startExtent" finished-at="2019-10-12T06:09:50 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getCNNNewSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getCNNNewSource()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:50 EDT" name="getCNNNewSource" finished-at="2019-10-12T06:09:50 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCNNNewSource -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:50 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:09:50 EDT" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCNNNewSource status=SUCCESS method=TestFooterTabs.getCNNNewSource()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:50 EDT" name="cleanUp" finished-at="2019-10-12T06:09:50 EDT" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:50 EDT" name="setUp" finished-at="2019-10-12T06:09:59 EDT" duration-ms="9107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:59 EDT" name="startExtent" finished-at="2019-10-12T06:09:59 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getCNNStudioTours()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getCNNStudioTours()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:59 EDT" name="getCNNStudioTours" finished-at="2019-10-12T06:09:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCNNStudioTours -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:09:59 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:10:00 EDT" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCNNStudioTours status=SUCCESS method=TestFooterTabs.getCNNStudioTours()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:00 EDT" name="cleanUp" finished-at="2019-10-12T06:10:02 EDT" duration-ms="2589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:02 EDT" name="setUp" finished-at="2019-10-12T06:10:14 EDT" duration-ms="12069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:14 EDT" name="startExtent" finished-at="2019-10-12T06:10:14 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getPrivacyPolicy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getPrivacyPolicy()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:14 EDT" name="getPrivacyPolicy" finished-at="2019-10-12T06:10:14 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrivacyPolicy -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:14 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:10:14 EDT" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPrivacyPolicy status=SUCCESS method=TestFooterTabs.getPrivacyPolicy()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:14 EDT" name="cleanUp" finished-at="2019-10-12T06:10:15 EDT" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:15 EDT" name="setUp" finished-at="2019-10-12T06:10:26 EDT" duration-ms="10939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:26 EDT" name="startExtent" finished-at="2019-10-12T06:10:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getSiteMap()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:26 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:10:26 EDT" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSiteMap status=SUCCESS method=TestFooterTabs.getSiteMap()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="getSiteMap()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:26 EDT" name="getSiteMap" finished-at="2019-10-12T06:10:26 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSiteMap -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:26 EDT" name="cleanUp" finished-at="2019-10-12T06:10:27 EDT" duration-ms="818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:27 EDT" name="setUp" finished-at="2019-10-12T06:10:39 EDT" duration-ms="11829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:39 EDT" name="startExtent" finished-at="2019-10-12T06:10:39 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getTermsOfsUse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getTermsOfsUse()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:39 EDT" name="getTermsOfsUse" finished-at="2019-10-12T06:10:39 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTermsOfsUse -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:39 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:10:39 EDT" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTermsOfsUse status=SUCCESS method=TestFooterTabs.getTermsOfsUse()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:39 EDT" name="cleanUp" finished-at="2019-10-12T06:10:39 EDT" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:39 EDT" name="setUp" finished-at="2019-10-12T06:10:51 EDT" duration-ms="11791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:51 EDT" name="startExtent" finished-at="2019-10-12T06:10:51 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.getTranscript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="getTranscript()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:51 EDT" name="getTranscript" finished-at="2019-10-12T06:10:51 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTranscript -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:51 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:10:51 EDT" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTranscript status=SUCCESS method=TestFooterTabs.getTranscript()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:51 EDT" name="cleanUp" finished-at="2019-10-12T06:10:52 EDT" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:10:52 EDT" name="setUp" finished-at="2019-10-12T06:11:05 EDT" duration-ms="13033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:05 EDT" name="startExtent" finished-at="2019-10-12T06:11:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToAmericas()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:05 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:11:05 EDT" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToAmericas status=SUCCESS method=TestFooterTabs.goToAmericas()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="goToAmericas()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:05 EDT" name="goToAmericas" finished-at="2019-10-12T06:11:05 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAmericas -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:05 EDT" name="cleanUp" finished-at="2019-10-12T06:11:06 EDT" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:06 EDT" name="setUp" finished-at="2019-10-12T06:11:29 EDT" duration-ms="23455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:29 EDT" name="startExtent" finished-at="2019-10-12T06:11:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToCNNStore()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToCNNStore()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:29 EDT" name="goToCNNStore" finished-at="2019-10-12T06:11:29 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToCNNStore -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:29 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:11:29 EDT" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToCNNStore status=SUCCESS method=TestFooterTabs.goToCNNStore()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:29 EDT" name="cleanUp" finished-at="2019-10-12T06:11:30 EDT" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:30 EDT" name="setUp" finished-at="2019-10-12T06:11:42 EDT" duration-ms="11937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:42 EDT" name="startExtent" finished-at="2019-10-12T06:11:42 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToCnnLead()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToCnnLead()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:42 EDT" name="goToCnnLead" finished-at="2019-10-12T06:11:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToCnnLead -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:42 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:11:43 EDT" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToCnnLead status=SUCCESS method=TestFooterTabs.goToCnnLead()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:43 EDT" name="cleanUp" finished-at="2019-10-12T06:11:43 EDT" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:43 EDT" name="setUp" finished-at="2019-10-12T06:11:57 EDT" duration-ms="13660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:57 EDT" name="startExtent" finished-at="2019-10-12T06:11:57 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToCnnVr()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToCnnVr()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:57 EDT" name="goToCnnVr" finished-at="2019-10-12T06:11:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToCnnVr -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:57 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:11:57 EDT" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToCnnVr status=SUCCESS method=TestFooterTabs.goToCnnVr()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:57 EDT" name="cleanUp" finished-at="2019-10-12T06:11:58 EDT" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:11:58 EDT" name="setUp" finished-at="2019-10-12T06:12:11 EDT" duration-ms="12989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:11 EDT" name="startExtent" finished-at="2019-10-12T06:12:11 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToFitness()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:11 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:12:11 EDT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToFitness status=SUCCESS method=TestFooterTabs.goToFitness()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="goToFitness()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:11 EDT" name="goToFitness" finished-at="2019-10-12T06:12:11 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToFitness -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:11 EDT" name="cleanUp" finished-at="2019-10-12T06:12:12 EDT" duration-ms="729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:12 EDT" name="setUp" finished-at="2019-10-12T06:12:24 EDT" duration-ms="12119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:24 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:12:24 EDT" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToLongForm status=SUCCESS method=TestFooterTabs.goToLongForm()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:24 EDT" name="startExtent" finished-at="2019-10-12T06:12:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToLongForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToLongForm()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:24 EDT" name="goToLongForm" finished-at="2019-10-12T06:12:24 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLongForm -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:24 EDT" name="cleanUp" finished-at="2019-10-12T06:12:25 EDT" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:25 EDT" name="setUp" finished-at="2019-10-12T06:12:38 EDT" duration-ms="13323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:38 EDT" name="startExtent" finished-at="2019-10-12T06:12:38 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToNewsletter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToNewsletter()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:38 EDT" name="goToNewsletter" finished-at="2019-10-12T06:12:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToNewsletter -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:38 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:12:38 EDT" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToNewsletter status=SUCCESS method=TestFooterTabs.goToNewsletter()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:38 EDT" name="cleanUp" finished-at="2019-10-12T06:12:38 EDT" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:38 EDT" name="setUp" finished-at="2019-10-12T06:12:48 EDT" duration-ms="9076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:48 EDT" name="startExtent" finished-at="2019-10-12T06:12:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToStyle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToStyle()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:48 EDT" name="goToStyle" finished-at="2019-10-12T06:12:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToStyle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:48 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:12:48 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToStyle status=SUCCESS method=TestFooterTabs.goToStyle()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:48 EDT" name="cleanUp" finished-at="2019-10-12T06:12:48 EDT" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:48 EDT" name="setUp" finished-at="2019-10-12T06:12:57 EDT" duration-ms="9208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:57 EDT" name="startExtent" finished-at="2019-10-12T06:12:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.goToTech()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="goToTech()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:57 EDT" name="goToTech" finished-at="2019-10-12T06:12:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToTech -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:57 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:12:58 EDT" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToTech status=SUCCESS method=TestFooterTabs.goToTech()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:58 EDT" name="cleanUp" finished-at="2019-10-12T06:12:58 EDT" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:12:58 EDT" name="setUp" finished-at="2019-10-12T06:13:08 EDT" duration-ms="9346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:08 EDT" name="startExtent" finished-at="2019-10-12T06:13:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.licenseFootage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:08 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:13:08 EDT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=licenseFootage status=SUCCESS method=TestFooterTabs.licenseFootage()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="licenseFootage()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:08 EDT" name="licenseFootage" finished-at="2019-10-12T06:13:08 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- licenseFootage -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:08 EDT" name="cleanUp" finished-at="2019-10-12T06:13:08 EDT" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:08 EDT" name="setUp" finished-at="2019-10-12T06:13:22 EDT" duration-ms="13808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:22 EDT" name="startExtent" finished-at="2019-10-12T06:13:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.testArchitecturePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testArchitecturePage()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:22 EDT" name="testArchitecturePage" finished-at="2019-10-12T06:13:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArchitecturePage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:22 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:13:22 EDT" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testArchitecturePage status=SUCCESS method=TestFooterTabs.testArchitecturePage()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:22 EDT" name="cleanUp" finished-at="2019-10-12T06:13:23 EDT" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:23 EDT" name="setUp" finished-at="2019-10-12T06:13:35 EDT" duration-ms="12038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:35 EDT" name="startExtent" finished-at="2019-10-12T06:13:35 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.testFactsSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testFactsSection()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:35 EDT" name="testFactsSection" finished-at="2019-10-12T06:13:35 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactsSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:35 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:13:35 EDT" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFactsSection status=SUCCESS method=TestFooterTabs.testFactsSection()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:35 EDT" name="cleanUp" finished-at="2019-10-12T06:13:36 EDT" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:36 EDT" name="setUp" finished-at="2019-10-12T06:13:52 EDT" duration-ms="15880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:52 EDT" name="startExtent" finished-at="2019-10-12T06:13:52 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.testParentingSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testParentingSection()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:52 EDT" name="testParentingSection" finished-at="2019-10-12T06:13:52 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParentingSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:52 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:13:52 EDT" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testParentingSection status=SUCCESS method=TestFooterTabs.testParentingSection()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:52 EDT" name="cleanUp" finished-at="2019-10-12T06:13:52 EDT" duration-ms="744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:13:52 EDT" name="setUp" finished-at="2019-10-12T06:14:04 EDT" duration-ms="11431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:14:04 EDT" name="startExtent" finished-at="2019-10-12T06:14:04 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestFooterTabs.testPlayPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:14:04 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:14:04 EDT" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPlayPage status=SUCCESS method=TestFooterTabs.testPlayPage()[pri:0, instance:home.TestFooterTabs@185a6e9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testPlayPage()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:14:04 EDT" name="testPlayPage" finished-at="2019-10-12T06:14:04 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlayPage -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestFooterTabs@185a6e9]" started-at="2019-10-12T06:14:04 EDT" name="cleanUp" finished-at="2019-10-12T06:14:04 EDT" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestFooterTabs -->
      <class name="home.TestCheckEdition">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:01:59 EDT" name="setUp" finished-at="2019-10-12T06:02:15 EDT" duration-ms="15390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:15 EDT" name="startExtent" finished-at="2019-10-12T06:02:15 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckEdition.checkArabicEdition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkArabicEdition()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:15 EDT" name="checkArabicEdition" finished-at="2019-10-12T06:02:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkArabicEdition -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:15 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:02:15 EDT" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkArabicEdition status=SUCCESS method=TestCheckEdition.checkArabicEdition()[pri:0, instance:home.TestCheckEdition@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:15 EDT" name="cleanUp" finished-at="2019-10-12T06:02:15 EDT" duration-ms="792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:15 EDT" name="setUp" finished-at="2019-10-12T06:02:28 EDT" duration-ms="12778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:28 EDT" name="startExtent" finished-at="2019-10-12T06:02:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckEdition.checkEspanolEdition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkEspanolEdition()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:28 EDT" name="checkEspanolEdition" finished-at="2019-10-12T06:02:28 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkEspanolEdition -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:28 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:02:28 EDT" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkEspanolEdition status=SUCCESS method=TestCheckEdition.checkEspanolEdition()[pri:0, instance:home.TestCheckEdition@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:28 EDT" name="cleanUp" finished-at="2019-10-12T06:02:29 EDT" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:29 EDT" name="setUp" finished-at="2019-10-12T06:02:42 EDT" duration-ms="12944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkInternationalEd()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:42 EDT" name="checkInternationalEd" finished-at="2019-10-12T06:02:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInternationalEd -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:42 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:02:42 EDT" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkInternationalEd status=SUCCESS method=TestCheckEdition.checkInternationalEd()[pri:0, instance:home.TestCheckEdition@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:42 EDT" name="startExtent" finished-at="2019-10-12T06:02:42 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckEdition.checkInternationalEd()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:42 EDT" name="cleanUp" finished-at="2019-10-12T06:02:42 EDT" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:42 EDT" name="setUp" finished-at="2019-10-12T06:02:57 EDT" duration-ms="14582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:57 EDT" name="startExtent" finished-at="2019-10-12T06:02:57 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckEdition.checkUSEdition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkUSEdition()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:57 EDT" name="checkUSEdition" finished-at="2019-10-12T06:02:57 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUSEdition -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:57 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:02:57 EDT" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkUSEdition status=SUCCESS method=TestCheckEdition.checkUSEdition()[pri:0, instance:home.TestCheckEdition@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:57 EDT" name="cleanUp" finished-at="2019-10-12T06:02:58 EDT" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:02:58 EDT" name="setUp" finished-at="2019-10-12T06:03:11 EDT" duration-ms="13031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCheckEdition()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:03:11 EDT" name="testCheckEdition" finished-at="2019-10-12T06:03:11 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckEdition -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:03:11 EDT" name="startExtent" finished-at="2019-10-12T06:03:11 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckEdition.testCheckEdition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:03:11 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:03:11 EDT" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckEdition status=SUCCESS method=TestCheckEdition.testCheckEdition()[pri:0, instance:home.TestCheckEdition@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckEdition@233795b6]" started-at="2019-10-12T06:03:11 EDT" name="cleanUp" finished-at="2019-10-12T06:03:12 EDT" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestCheckEdition -->
      <class name="home.TestCnnCareers">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:20 EDT" name="extentSetup" finished-at="2019-10-12T05:58:20 EDT" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@27d9a016]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\imani\IdeaProjects\CNN-Module\CNN\test-output\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:21 EDT" name="setUp" finished-at="2019-10-12T05:58:34 EDT" duration-ms="13613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:34 EDT" name="startExtent" finished-at="2019-10-12T05:58:34 EDT" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.checkCareersUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkCareersUrl()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:34 EDT" name="checkCareersUrl" finished-at="2019-10-12T05:58:34 EDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCareersUrl -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:34 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:58:35 EDT" duration-ms="748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCareersUrl status=SUCCESS method=TestCnnCareers.checkCareersUrl()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:35 EDT" name="cleanUp" finished-at="2019-10-12T05:58:36 EDT" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:36 EDT" name="setUp" finished-at="2019-10-12T05:58:48 EDT" duration-ms="12103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:48 EDT" name="startExtent" finished-at="2019-10-12T05:58:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.filterByAdminJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:48 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:58:48 EDT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByAdminJobs status=SUCCESS method=TestCnnCareers.filterByAdminJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="filterByAdminJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:48 EDT" name="filterByAdminJobs" finished-at="2019-10-12T05:58:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAdminJobs -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:48 EDT" name="cleanUp" finished-at="2019-10-12T05:58:49 EDT" duration-ms="883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:58:49 EDT" name="setUp" finished-at="2019-10-12T05:59:00 EDT" duration-ms="11794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:00 EDT" name="startExtent" finished-at="2019-10-12T05:59:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.filterByAnalyticsJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="filterByAnalyticsJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:00 EDT" name="filterByAnalyticsJobs" finished-at="2019-10-12T05:59:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAnalyticsJobs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:00 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:59:01 EDT" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByAnalyticsJobs status=SUCCESS method=TestCnnCareers.filterByAnalyticsJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:01 EDT" name="cleanUp" finished-at="2019-10-12T05:59:01 EDT" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:01 EDT" name="setUp" finished-at="2019-10-12T05:59:14 EDT" duration-ms="12318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:14 EDT" name="startExtent" finished-at="2019-10-12T05:59:14 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.filterByBusinessDevJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="filterByBusinessDevJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:14 EDT" name="filterByBusinessDevJobs" finished-at="2019-10-12T05:59:14 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByBusinessDevJobs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:14 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:59:14 EDT" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByBusinessDevJobs status=SUCCESS method=TestCnnCareers.filterByBusinessDevJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:14 EDT" name="cleanUp" finished-at="2019-10-12T05:59:14 EDT" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:14 EDT" name="setUp" finished-at="2019-10-12T05:59:23 EDT" duration-ms="9088" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:23 EDT" name="startExtent" finished-at="2019-10-12T05:59:23 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.filterByCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="filterByCountry()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:23 EDT" name="filterByCountry" finished-at="2019-10-12T05:59:23 EDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByCountry -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:23 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:59:24 EDT" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByCountry status=SUCCESS method=TestCnnCareers.filterByCountry()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:24 EDT" name="cleanUp" finished-at="2019-10-12T05:59:26 EDT" duration-ms="2695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:26 EDT" name="setUp" finished-at="2019-10-12T05:59:38 EDT" duration-ms="11881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:38 EDT" name="startExtent" finished-at="2019-10-12T05:59:38 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.filterByCountryUsa()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="filterByCountryUsa()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:38 EDT" name="filterByCountryUsa" finished-at="2019-10-12T05:59:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByCountryUsa -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:38 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:59:38 EDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByCountryUsa status=SUCCESS method=TestCnnCareers.filterByCountryUsa()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:38 EDT" name="cleanUp" finished-at="2019-10-12T05:59:39 EDT" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:39 EDT" name="setUp" finished-at="2019-10-12T05:59:51 EDT" duration-ms="12587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:51 EDT" name="startExtent" finished-at="2019-10-12T05:59:51 EDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.findCnnLeadership()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:51 EDT" name="afterEachTestMethod" finished-at="2019-10-12T05:59:51 EDT" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=findCnnLeadership status=SUCCESS method=TestCnnCareers.findCnnLeadership()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="findCnnLeadership()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:51 EDT" name="findCnnLeadership" finished-at="2019-10-12T05:59:51 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCnnLeadership -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:51 EDT" name="cleanUp" finished-at="2019-10-12T05:59:52 EDT" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T05:59:52 EDT" name="setUp" finished-at="2019-10-12T06:00:05 EDT" duration-ms="12904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="findInnovativeCities()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:05 EDT" name="findInnovativeCities" finished-at="2019-10-12T06:00:05 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findInnovativeCities -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:05 EDT" name="startExtent" finished-at="2019-10-12T06:00:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.findInnovativeCities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:05 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:00:05 EDT" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=findInnovativeCities status=SUCCESS method=TestCnnCareers.findInnovativeCities()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:05 EDT" name="cleanUp" finished-at="2019-10-12T06:00:08 EDT" duration-ms="2691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:08 EDT" name="setUp" finished-at="2019-10-12T06:00:22 EDT" duration-ms="13850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:22 EDT" name="startExtent" finished-at="2019-10-12T06:00:22 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.getITJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:22 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:00:22 EDT" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getITJobs status=SUCCESS method=TestCnnCareers.getITJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="getITJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:22 EDT" name="getITJobs" finished-at="2019-10-12T06:00:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getITJobs -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:22 EDT" name="cleanUp" finished-at="2019-10-12T06:00:22 EDT" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:22 EDT" name="setUp" finished-at="2019-10-12T06:00:32 EDT" duration-ms="9402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:32 EDT" name="startExtent" finished-at="2019-10-12T06:00:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.getNews()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:32 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:00:32 EDT" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getNews status=SUCCESS method=TestCnnCareers.getNews()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="getNews()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:32 EDT" name="getNews" finished-at="2019-10-12T06:00:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNews -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:32 EDT" name="cleanUp" finished-at="2019-10-12T06:00:32 EDT" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:32 EDT" name="setUp" finished-at="2019-10-12T06:00:44 EDT" duration-ms="12279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:44 EDT" name="startExtent" finished-at="2019-10-12T06:00:44 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.getSports()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:44 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:00:45 EDT" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSports status=SUCCESS method=TestCnnCareers.getSports()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="getSports()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:44 EDT" name="getSports" finished-at="2019-10-12T06:00:44 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSports -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:45 EDT" name="cleanUp" finished-at="2019-10-12T06:00:45 EDT" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:45 EDT" name="setUp" finished-at="2019-10-12T06:00:59 EDT" duration-ms="13994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:59 EDT" name="startExtent" finished-at="2019-10-12T06:00:59 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.scrollToViewCnnCareers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="scrollToViewCnnCareers()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:59 EDT" name="scrollToViewCnnCareers" finished-at="2019-10-12T06:00:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollToViewCnnCareers -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:59 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:00:59 EDT" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=scrollToViewCnnCareers status=SUCCESS method=TestCnnCareers.scrollToViewCnnCareers()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:00:59 EDT" name="cleanUp" finished-at="2019-10-12T06:01:00 EDT" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:00 EDT" name="setUp" finished-at="2019-10-12T06:01:09 EDT" duration-ms="9267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:09 EDT" name="startExtent" finished-at="2019-10-12T06:01:09 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.searchAdminJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:09 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:01:09 EDT" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAdminJobs status=SUCCESS method=TestCnnCareers.searchAdminJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="searchAdminJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:09 EDT" name="searchAdminJobs" finished-at="2019-10-12T06:01:09 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAdminJobs -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:09 EDT" name="cleanUp" finished-at="2019-10-12T06:01:10 EDT" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:10 EDT" name="setUp" finished-at="2019-10-12T06:01:20 EDT" duration-ms="10099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:20 EDT" name="startExtent" finished-at="2019-10-12T06:01:20 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.searchFinanceJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchFinanceJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:20 EDT" name="searchFinanceJobs" finished-at="2019-10-12T06:01:20 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFinanceJobs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:20 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:01:20 EDT" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFinanceJobs status=SUCCESS method=TestCnnCareers.searchFinanceJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:20 EDT" name="cleanUp" finished-at="2019-10-12T06:01:21 EDT" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:21 EDT" name="setUp" finished-at="2019-10-12T06:01:30 EDT" duration-ms="9139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:30 EDT" name="startExtent" finished-at="2019-10-12T06:01:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.searchTechJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchTechJobs()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:30 EDT" name="searchTechJobs" finished-at="2019-10-12T06:01:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTechJobs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:30 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:01:30 EDT" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTechJobs status=SUCCESS method=TestCnnCareers.searchTechJobs()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:30 EDT" name="cleanUp" finished-at="2019-10-12T06:01:33 EDT" duration-ms="3016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:33 EDT" name="setUp" finished-at="2019-10-12T06:01:58 EDT" duration-ms="24944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:58 EDT" name="startExtent" finished-at="2019-10-12T06:01:58 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCnnCareers.signUpForNewsLetter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="signUpForNewsLetter()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:58 EDT" name="signUpForNewsLetter" finished-at="2019-10-12T06:01:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpForNewsLetter -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:58 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:01:58 EDT" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpForNewsLetter status=SUCCESS method=TestCnnCareers.signUpForNewsLetter()[pri:0, instance:home.TestCnnCareers@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:01:58 EDT" name="cleanUp" finished-at="2019-10-12T06:01:59 EDT" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:home.TestCnnCareers@f5958c9]" started-at="2019-10-12T06:24:58 EDT" name="generateReport" finished-at="2019-10-12T06:24:58 EDT" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- home.TestCnnCareers -->
      <class name="home.TestCheckTitle">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestCheckTitle@5bda8e08]" started-at="2019-10-12T06:07:21 EDT" name="setUp" finished-at="2019-10-12T06:07:33 EDT" duration-ms="12359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestCheckTitle@5bda8e08]" started-at="2019-10-12T06:07:33 EDT" name="startExtent" finished-at="2019-10-12T06:07:33 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestCheckTitle.checkTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkTitle()[pri:0, instance:home.TestCheckTitle@5bda8e08]" started-at="2019-10-12T06:07:33 EDT" name="checkTitle" finished-at="2019-10-12T06:07:33 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTitle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestCheckTitle@5bda8e08]" started-at="2019-10-12T06:07:33 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:07:33 EDT" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTitle status=SUCCESS method=TestCheckTitle.checkTitle()[pri:0, instance:home.TestCheckTitle@5bda8e08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestCheckTitle@5bda8e08]" started-at="2019-10-12T06:07:33 EDT" name="cleanUp" finished-at="2019-10-12T06:07:34 EDT" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestCheckTitle -->
      <class name="home.TestSearchPage">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:12 EDT" name="setUp" finished-at="2019-10-12T06:03:22 EDT" duration-ms="10283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:22 EDT" name="startExtent" finished-at="2019-10-12T06:03:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.checkTechPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkTechPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:22 EDT" name="checkTechPage" finished-at="2019-10-12T06:03:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTechPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:22 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:03:22 EDT" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTechPage status=SUCCESS method=TestSearchPage.checkTechPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:22 EDT" name="cleanUp" finished-at="2019-10-12T06:03:23 EDT" duration-ms="1112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:23 EDT" name="setUp" finished-at="2019-10-12T06:03:36 EDT" duration-ms="12512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:36 EDT" name="startExtent" finished-at="2019-10-12T06:03:36 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToBusinessPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToBusinessPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:36 EDT" name="navigateToBusinessPage" finished-at="2019-10-12T06:03:36 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToBusinessPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:36 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:03:36 EDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToBusinessPage status=SUCCESS method=TestSearchPage.navigateToBusinessPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:36 EDT" name="cleanUp" finished-at="2019-10-12T06:03:37 EDT" duration-ms="726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:37 EDT" name="setUp" finished-at="2019-10-12T06:03:50 EDT" duration-ms="13542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:50 EDT" name="startExtent" finished-at="2019-10-12T06:03:50 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToEntertainmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:50 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:03:50 EDT" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToEntertainmentPage status=SUCCESS method=TestSearchPage.navigateToEntertainmentPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="navigateToEntertainmentPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:50 EDT" name="navigateToEntertainmentPage" finished-at="2019-10-12T06:03:50 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToEntertainmentPage -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:50 EDT" name="cleanUp" finished-at="2019-10-12T06:03:51 EDT" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:03:51 EDT" name="setUp" finished-at="2019-10-12T06:04:04 EDT" duration-ms="13723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:04 EDT" name="startExtent" finished-at="2019-10-12T06:04:05 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToHealthPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToHealthPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:05 EDT" name="navigateToHealthPage" finished-at="2019-10-12T06:04:05 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToHealthPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:05 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:04:05 EDT" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToHealthPage status=SUCCESS method=TestSearchPage.navigateToHealthPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:05 EDT" name="cleanUp" finished-at="2019-10-12T06:04:05 EDT" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:05 EDT" name="setUp" finished-at="2019-10-12T06:04:19 EDT" duration-ms="13924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:19 EDT" name="startExtent" finished-at="2019-10-12T06:04:19 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToOpinionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToOpinionPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:19 EDT" name="navigateToOpinionPage" finished-at="2019-10-12T06:04:19 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToOpinionPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:04:19 EDT" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToOpinionPage status=SUCCESS method=TestSearchPage.navigateToOpinionPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:19 EDT" name="cleanUp" finished-at="2019-10-12T06:04:20 EDT" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:20 EDT" name="setUp" finished-at="2019-10-12T06:04:28 EDT" duration-ms="8579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:28 EDT" name="startExtent" finished-at="2019-10-12T06:04:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToPoliticsSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToPoliticsSection()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:28 EDT" name="navigateToPoliticsSection" finished-at="2019-10-12T06:04:28 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPoliticsSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:28 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:04:28 EDT" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPoliticsSection status=SUCCESS method=TestSearchPage.navigateToPoliticsSection()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:28 EDT" name="cleanUp" finished-at="2019-10-12T06:04:29 EDT" duration-ms="998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:29 EDT" name="setUp" finished-at="2019-10-12T06:04:39 EDT" duration-ms="9710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:39 EDT" name="startExtent" finished-at="2019-10-12T06:04:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToSportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToSportsPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:39 EDT" name="navigateToSportsPage" finished-at="2019-10-12T06:04:39 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToSportsPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:39 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:04:39 EDT" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToSportsPage status=SUCCESS method=TestSearchPage.navigateToSportsPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:39 EDT" name="cleanUp" finished-at="2019-10-12T06:04:40 EDT" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:40 EDT" name="setUp" finished-at="2019-10-12T06:04:50 EDT" duration-ms="10660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigateToStylePage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:50 EDT" name="navigateToStylePage" finished-at="2019-10-12T06:04:50 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToStylePage -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:50 EDT" name="startExtent" finished-at="2019-10-12T06:04:50 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToStylePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:50 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:04:51 EDT" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToStylePage status=SUCCESS method=TestSearchPage.navigateToStylePage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:51 EDT" name="cleanUp" finished-at="2019-10-12T06:04:51 EDT" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:04:51 EDT" name="setUp" finished-at="2019-10-12T06:05:04 EDT" duration-ms="12889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:04 EDT" name="startExtent" finished-at="2019-10-12T06:05:04 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToTravelPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToTravelPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:04 EDT" name="navigateToTravelPage" finished-at="2019-10-12T06:05:04 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToTravelPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:04 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:05:04 EDT" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToTravelPage status=SUCCESS method=TestSearchPage.navigateToTravelPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:04 EDT" name="cleanUp" finished-at="2019-10-12T06:05:05 EDT" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:05 EDT" name="setUp" finished-at="2019-10-12T06:05:19 EDT" duration-ms="14519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:19 EDT" name="startExtent" finished-at="2019-10-12T06:05:19 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToUsSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToUsSection()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:19 EDT" name="navigateToUsSection" finished-at="2019-10-12T06:05:19 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToUsSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:19 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:05:19 EDT" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToUsSection status=SUCCESS method=TestSearchPage.navigateToUsSection()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:19 EDT" name="cleanUp" finished-at="2019-10-12T06:05:20 EDT" duration-ms="662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:20 EDT" name="setUp" finished-at="2019-10-12T06:05:35 EDT" duration-ms="14828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:35 EDT" name="startExtent" finished-at="2019-10-12T06:05:35 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateToWorldSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateToWorldSection()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:35 EDT" name="navigateToWorldSection" finished-at="2019-10-12T06:05:35 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToWorldSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:35 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:05:35 EDT" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToWorldSection status=SUCCESS method=TestSearchPage.navigateToWorldSection()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:35 EDT" name="cleanUp" finished-at="2019-10-12T06:05:36 EDT" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:36 EDT" name="setUp" finished-at="2019-10-12T06:05:48 EDT" duration-ms="12900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:48 EDT" name="startExtent" finished-at="2019-10-12T06:05:48 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.navigateTovVdeosPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="navigateTovVdeosPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:48 EDT" name="navigateTovVdeosPage" finished-at="2019-10-12T06:05:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateTovVdeosPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:48 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:05:49 EDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateTovVdeosPage status=SUCCESS method=TestSearchPage.navigateTovVdeosPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:49 EDT" name="cleanUp" finished-at="2019-10-12T06:05:49 EDT" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:05:49 EDT" name="setUp" finished-at="2019-10-12T06:06:01 EDT" duration-ms="12032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:01 EDT" name="startExtent" finished-at="2019-10-12T06:06:01 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testAsiaPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testAsiaPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:01 EDT" name="testAsiaPage" finished-at="2019-10-12T06:06:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsiaPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:01 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:06:01 EDT" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAsiaPage status=SUCCESS method=TestSearchPage.testAsiaPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:01 EDT" name="cleanUp" finished-at="2019-10-12T06:06:02 EDT" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:02 EDT" name="setUp" finished-at="2019-10-12T06:06:14 EDT" duration-ms="11943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:14 EDT" name="startExtent" finished-at="2019-10-12T06:06:14 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testCNNFilmsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testCNNFilmsPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:14 EDT" name="testCNNFilmsPage" finished-at="2019-10-12T06:06:14 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCNNFilmsPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:14 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:06:14 EDT" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCNNFilmsPage status=SUCCESS method=TestSearchPage.testCNNFilmsPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:14 EDT" name="cleanUp" finished-at="2019-10-12T06:06:15 EDT" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:15 EDT" name="setUp" finished-at="2019-10-12T06:06:36 EDT" duration-ms="21673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:36 EDT" name="startExtent" finished-at="2019-10-12T06:06:36 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testDigitalStudiosPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testDigitalStudiosPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:36 EDT" name="testDigitalStudiosPage" finished-at="2019-10-12T06:06:36 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDigitalStudiosPage -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:36 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:06:36 EDT" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDigitalStudiosPage status=SUCCESS method=TestSearchPage.testDigitalStudiosPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:36 EDT" name="cleanUp" finished-at="2019-10-12T06:06:37 EDT" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:37 EDT" name="setUp" finished-at="2019-10-12T06:06:50 EDT" duration-ms="13531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:50 EDT" name="startExtent" finished-at="2019-10-12T06:06:50 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testEuropeSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testEuropeSection()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:50 EDT" name="testEuropeSection" finished-at="2019-10-12T06:06:50 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEuropeSection -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:50 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:06:51 EDT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEuropeSection status=SUCCESS method=TestSearchPage.testEuropeSection()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:51 EDT" name="cleanUp" finished-at="2019-10-12T06:06:51 EDT" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:06:51 EDT" name="setUp" finished-at="2019-10-12T06:07:05 EDT" duration-ms="13627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:05 EDT" name="startExtent" finished-at="2019-10-12T06:07:05 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testInnovativeCitiesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:05 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:07:05 EDT" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInnovativeCitiesPage status=SUCCESS method=TestSearchPage.testInnovativeCitiesPage()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testInnovativeCitiesPage()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:05 EDT" name="testInnovativeCitiesPage" finished-at="2019-10-12T06:07:05 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnovativeCitiesPage -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:05 EDT" name="cleanUp" finished-at="2019-10-12T06:07:06 EDT" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:06 EDT" name="setUp" finished-at="2019-10-12T06:07:20 EDT" duration-ms="14488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:20 EDT" name="startExtent" finished-at="2019-10-12T06:07:20 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestSearchPage.testSearchCoupons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testSearchCoupons()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:20 EDT" name="testSearchCoupons" finished-at="2019-10-12T06:07:20 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCoupons -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:20 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:07:20 EDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchCoupons status=SUCCESS method=TestSearchPage.testSearchCoupons()[pri:0, instance:home.TestSearchPage@3eb738bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestSearchPage@3eb738bb]" started-at="2019-10-12T06:07:20 EDT" name="cleanUp" finished-at="2019-10-12T06:07:21 EDT" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestSearchPage -->
      <class name="home.TestLive">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:34 EDT" name="setUp" finished-at="2019-10-12T06:07:48 EDT" duration-ms="13759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:48 EDT" name="startExtent" finished-at="2019-10-12T06:07:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestLive.checkLiveUpdates()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="checkLiveUpdates()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:48 EDT" name="checkLiveUpdates" finished-at="2019-10-12T06:07:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLiveUpdates -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:48 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:07:48 EDT" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLiveUpdates status=SUCCESS method=TestLive.checkLiveUpdates()[pri:0, instance:home.TestLive@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:48 EDT" name="cleanUp" finished-at="2019-10-12T06:07:48 EDT" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:07:48 EDT" name="setUp" finished-at="2019-10-12T06:08:01 EDT" duration-ms="12659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLive()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:01 EDT" name="testLive" finished-at="2019-10-12T06:08:01 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLive -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:01 EDT" name="startExtent" finished-at="2019-10-12T06:08:01 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestLive.testLive()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:01 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:08:01 EDT" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLive status=SUCCESS method=TestLive.testLive()[pri:0, instance:home.TestLive@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:01 EDT" name="cleanUp" finished-at="2019-10-12T06:08:02 EDT" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:02 EDT" name="setUp" finished-at="2019-10-12T06:08:13 EDT" duration-ms="11432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:13 EDT" name="startExtent" finished-at="2019-10-12T06:08:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestLive.viewChannels()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="viewChannels()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:13 EDT" name="viewChannels" finished-at="2019-10-12T06:08:13 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewChannels -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:13 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:08:13 EDT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewChannels status=SUCCESS method=TestLive.viewChannels()[pri:0, instance:home.TestLive@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:13 EDT" name="cleanUp" finished-at="2019-10-12T06:08:14 EDT" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:14 EDT" name="setUp" finished-at="2019-10-12T06:08:26 EDT" duration-ms="12768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="viewSettings()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:26 EDT" name="viewSettings" finished-at="2019-10-12T06:08:26 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewSettings -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:26 EDT" name="startExtent" finished-at="2019-10-12T06:08:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestLive.viewSettings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:26 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:08:26 EDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewSettings status=SUCCESS method=TestLive.viewSettings()[pri:0, instance:home.TestLive@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:26 EDT" name="cleanUp" finished-at="2019-10-12T06:08:27 EDT" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:27 EDT" name="setUp" finished-at="2019-10-12T06:08:41 EDT" duration-ms="13818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.cnn.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:41 EDT" name="startExtent" finished-at="2019-10-12T06:08:41 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void home.TestLive.viewShows()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="viewShows()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:41 EDT" name="viewShows" finished-at="2019-10-12T06:08:41 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewShows -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:41 EDT" name="afterEachTestMethod" finished-at="2019-10-12T06:08:41 EDT" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewShows status=SUCCESS method=TestLive.viewShows()[pri:0, instance:home.TestLive@1e800aaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:home.TestLive@1e800aaa]" started-at="2019-10-12T06:08:41 EDT" name="cleanUp" finished-at="2019-10-12T06:08:42 EDT" duration-ms="610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- home.TestLive -->
    </test> <!-- CNN HomePage Test -->
  </suite> <!-- CNN Automation Script  -->
</testng-results>
